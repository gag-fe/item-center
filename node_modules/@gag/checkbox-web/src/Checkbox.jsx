import RcCheckbox from 'rc-checkbox';
import React from 'react';
import '../style';
import PropTypes from 'prop-types';
import CheckboxGroup from './Group';
import classNames from 'classnames';
import PureRenderMixin from 'rc-util/lib/PureRenderMixin';

class Checkbox extends React.Component{
  shouldComponentUpdate(...args) {
    return PureRenderMixin.shouldComponentUpdate.apply(this, args);
  }
  render() {
    const {
      prefixCls, style, children, className, indeterminate,
      onMouseEnter, onMouseLeave, ...restProps,
     } = this.props;
    const classString = classNames(className, {
      [`${prefixCls}-wrapper`]: true,
    });
    const checkboxClass = classNames({
      [`${prefixCls}-indeterminate`]: indeterminate,
    });
    return (
      <label
        className={classString}
        style={style}
        onMouseEnter={onMouseEnter}
        onMouseLeave={onMouseLeave}
      >
        <RcCheckbox
          {...restProps}
          prefixCls={prefixCls}
          className={checkboxClass}
          children={null}
        />
        {children !== undefined ? <span>{children}</span> : null}
      </label>
    );
  }
}
Checkbox.defaultProps = {
  prefixCls: 'ant-checkbox',
  indeterminate: false,
};
Checkbox.propTypes = {
  prefixCls: PropTypes.string,
  /** 指定当前是否选中 */
  checked:PropTypes.bool,
  /** 初始是否选中 */
  defaultChecked:PropTypes.bool,
  /** indeterminate 状态，只负责样式控制 */
  indeterminate:PropTypes.bool,
  /** 变化时回调函数 */
  onChange:PropTypes.func,
  onMouseEnter:PropTypes.func,
  onMouseLeave:PropTypes.func,
  disabled:PropTypes.bool,
  className: PropTypes.string,
};
Checkbox.displayName = "Checkbox";
module.exports=Checkbox;
