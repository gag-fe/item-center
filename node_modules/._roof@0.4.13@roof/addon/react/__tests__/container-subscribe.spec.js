//require('jasmine-pit').install(window)
jest.autoMockOff()
jest.dontMock('es6-promise');
require('es6-promise').polyfill();

describe('react addon container test', function(){


  it('subscribe sync data', function(  ){
    var React = require('react')
    var TestUtils = require('react-addons-test-utils');
    var ReactDom = require('react-dom');
    var Roof = require('roof')
    require('../container')
    var syncUsersFactory = require('./common/data/users.js')
    var outsideRenderTimes =0
    var insideRenderTimes =0
    var RootContainer = Roof.createRootContainer({
      data : {
        users : syncUsersFactory
      },
      render(){

        return <UsersOutside />
      }
    })

    var UsersOutside = Roof.createContainer({
      cursors : {
        users : 'users'
      },
      render(){
        expect( this.props.users ).toBeDefined(  );
        outsideRenderTimes++
        return <UsersInside />
      }
    })

    var UsersInside = Roof.createContainer({
      cursors : {
        users : 'users'
      },
      render(){
        expect( this.props.users ).toBeDefined( );
        insideRenderTimes++
        return <div />
      }
    })


    var rootContainer = TestUtils.renderIntoDocument(<RootContainer instanceName='root'/>);
    var users = syncUsersFactory()

    expect( outsideRenderTimes ).toEqual( 1 );
    expect( insideRenderTimes ).toEqual( 1 );

    Roof.Sources.root.get('users').insert({name:'Jane Doe'})

    expect( outsideRenderTimes ).toEqual( 2 );
    expect( insideRenderTimes ).toEqual( 2 );

  })

})