
function noop(){}
noop.prototype._register = function(){}
noop.prototype._remove= function(){}


function Source(){}

Source.prototype._register = function( instanceName, galaxy ){
  var methods = ['_register','_remove']
  if( methods.indexOf(instanceName) !== -1){
    throw new Error('Roof rootContainer instanceName conflict with Source method name :'+instanceName )
  }

  if( this[instanceName] !== undefined ){
     console.warn('You already have a roofContainer with same instanceName: '+ instanceName)
  }

    this[instanceName] = galaxy
}

Source.prototype._remove = function( instanceName ){
  delete this[instanceName]
}


function manage( Roof ){

  if( Roof.Sources  !== undefined ) return

  Roof.Sources = new Source
}




//global data manage can only be used in browser
module.exports = typeof window !== 'undefined' ? manage : noop