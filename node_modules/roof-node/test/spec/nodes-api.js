var assert = require("assert")
var _ = require("lodash")
var Node = require("../../lib/node")
var Nodes = require("../../lib/nodes")
var async = require("async")


var User = Node.createClass()
var Users= Nodes.createClass( User )


describe("nodes api test", function(){
  it("api should work", function(){
    var UserList = Nodes.createClass({
      setAllName : function(name){
        return this.forEach(function(node){
          node.set("name", name)
        })
      },
      getTotalAge : function( ){
        var total = 0
        this.forEach(function( node){
          total += node.get("age")
        })
        return total
      }
    })

    var users = new UserList
    users.insert({"name":"jhon", age:21})
    users.insert({"name":"maya", age:32})

    assert.equal( users.getTotalAge(), 53)
    users.setAllName("jesper")

    assert.equal( users.getTotalAge(), 53)
    assert.equal( users.get(0).get("name"), "jesper")
  })

  it("api conflict should fail", function(){
    var error =false
    try{
      Node.createClass({
        set : function(){},
        get : function(){},
        commit : function(){}
      })
    }catch(e){
      console.log(e)
      error = true
    }
    assert.equal( error, true)
  })

  it('destroy should delete all api', function(){

    var Users = Nodes.createClass({})
    var users= new Users
    var fired = 0
    var error = null
    users.on("insert", function() {
      fired++
    })

    users.destroy()
    try{
      users.insert({name:'jane'})
    }catch(e){
      error = e
      console.log( e.message )
    }

    assert.equal( fired, 0)
    assert.notEqual( error, null)

  })

  it('fill should concat data', function(){
    var Users = Nodes.createClass({})
    var users= new Users([{name:'j'},{name:'l'}])

    assert.equal( users.length , 2)
    users.fill([{name:'d'}])
    assert.equal( users.length , 3)
  })

})